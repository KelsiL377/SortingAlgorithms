<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.geometry.*?>
<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>

<GridPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="400.0" prefWidth="600.0" xmlns="http://javafx.com/javafx/17.0.12" xmlns:fx="http://javafx.com/fxml/1" fx:controller="org.kelhenson.sortingalgorithms.controllers.HomeController">
    <Label style="-fx-font-weight: bold;-fx-font-size: 22" text="Welcome to the Sorting Algorithm!" GridPane.columnSpan="2" GridPane.halignment="CENTER" GridPane.rowIndex="0" />
    <Label style="-fx-font-size: 15" textAlignment="CENTER" wrapText="true" GridPane.columnSpan="2" GridPane.halignment="CENTER" GridPane.rowIndex="1">
        <text>In computer science, an "algorithm" is a step-by-step process used to solve a problem or a task. Below are four
            different common sorting algorithms. Each algorithm is explained and also visually shown in action by using a
            bar chart, taking a list of 50 randomized items and sorting them from 1-50 in order. How they accomplish this
            task varies, depending on the underlying algorithm that each one uses. While the end goal is the same, pros and
            cons exist for each method used.</text>
        <padding>
            <Insets left="25.0" right="25.0" />
        </padding>
    </Label>


    <Button fx:id="mergeSortBtn" minWidth="50" mnemonicParsing="false" onAction="#onMergeSortButtonClick" text="Merge Sort" GridPane.halignment="CENTER" GridPane.rowIndex="2" />
    <Button minWidth="50" mnemonicParsing="false" onAction="#onBubbleSortButtonClick" text="Bubble Sort" GridPane.halignment="CENTER" GridPane.rowIndex="3" />
    <Button minWidth="50" mnemonicParsing="false" onAction="#onHeapSortButtonClick" text="Heap Sort" GridPane.columnIndex="1" GridPane.halignment="CENTER" GridPane.rowIndex="2" />
    <Button fx:id="quickSortBtn" minWidth="50" mnemonicParsing="false" onAction="#onQuickSortButtonClick" text="Quick Sort" GridPane.columnIndex="1" GridPane.halignment="CENTER" GridPane.rowIndex="3" />
    <Button minWidth="50" mnemonicParsing="false" onAction="#onExitButtonClick" text="Exit" GridPane.columnSpan="2" GridPane.halignment="CENTER" GridPane.rowIndex="4" />


    <columnConstraints>
    <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="200.0" />
    <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="200.0" />
  </columnConstraints>
  <rowConstraints>
    <RowConstraints maxHeight="71.0" minHeight="10.0" prefHeight="57.0" vgrow="SOMETIMES" />
    <RowConstraints maxHeight="276.0" minHeight="10.0" prefHeight="223.0" vgrow="SOMETIMES" />
    <RowConstraints maxHeight="89.0" minHeight="1.0" prefHeight="42.0" vgrow="SOMETIMES" />
      <RowConstraints maxHeight="77.0" minHeight="1.0" prefHeight="25.0" vgrow="SOMETIMES" />
      <RowConstraints maxHeight="61.0" minHeight="1.0" prefHeight="53.0" vgrow="SOMETIMES" />
  </rowConstraints>
</GridPane>
